# Generated by Django 5.2.4 on 2025-08-01 10:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Марка')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='car_brands/', verbose_name='Логотип')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Марка автомобиля',
                'verbose_name_plural': 'Марки автомобилей',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CarFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название опции')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Опция автомобиля',
                'verbose_name_plural': 'Опции автомобилей',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год выпуска')),
                ('body_type', models.CharField(choices=[('sedan', 'Седан'), ('hatchback', 'Хэтчбек'), ('wagon', 'Универсал'), ('coupe', 'Купе'), ('convertible', 'Кабриолет'), ('suv', 'Внедорожник'), ('crossover', 'Кроссовер'), ('pickup', 'Пикап'), ('minivan', 'Минивэн'), ('other', 'Другое')], max_length=20, verbose_name='Тип кузова')),
                ('fuel_type', models.CharField(choices=[('gasoline', 'Бензин'), ('diesel', 'Дизель'), ('hybrid', 'Гибрид'), ('electric', 'Электричество'), ('gas', 'Газ')], max_length=20, verbose_name='Тип топлива')),
                ('engine_volume', models.DecimalField(decimal_places=1, max_digits=3, verbose_name='Объем двигателя (л)')),
                ('engine_power', models.PositiveIntegerField(verbose_name='Мощность (л.с.)')),
                ('transmission', models.CharField(choices=[('manual', 'Механическая'), ('automatic', 'Автоматическая'), ('cvt', 'Вариатор'), ('robot', 'Робот')], max_length=20, verbose_name='Коробка передач')),
                ('drive_type', models.CharField(choices=[('front', 'Передний'), ('rear', 'Задний'), ('all', 'Полный')], max_length=10, verbose_name='Привод')),
                ('mileage', models.PositiveIntegerField(verbose_name='Пробег (км)')),
                ('condition', models.CharField(choices=[('new', 'Новый'), ('used', 'Б/у'), ('damaged', 'Требует ремонта')], max_length=20, verbose_name='Состояние')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена (руб.)')),
                ('is_negotiable', models.BooleanField(default=True, verbose_name='Торг уместен')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('vin', models.CharField(blank=True, max_length=17, verbose_name='VIN номер')),
                ('license_plate', models.CharField(blank=True, max_length=20, verbose_name='Гос. номер')),
                ('description', models.TextField(verbose_name='Описание')),
                ('location', models.CharField(max_length=100, verbose_name='Местоположение')),
                ('contact_phone', models.CharField(max_length=17, verbose_name='Контактный телефон')),
                ('status', models.CharField(choices=[('active', 'Активно'), ('sold', 'Продано'), ('inactive', 'Неактивно')], default='active', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='Количество просмотров')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.carbrand', verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='car_images/', verbose_name='Изображение')),
                ('is_main', models.BooleanField(default=False, verbose_name='Главное фото')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='cars.car', verbose_name='Автомобиль')),
            ],
            options={
                'verbose_name': 'Изображение автомобиля',
                'verbose_name_plural': 'Изображения автомобилей',
                'ordering': ['-is_main', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Модель')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='cars.carbrand', verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Модель автомобиля',
                'verbose_name_plural': 'Модели автомобилей',
                'ordering': ['name'],
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.AddField(
            model_name='car',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.carmodel', verbose_name='Модель'),
        ),
        migrations.CreateModel(
            name='CarView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_views', to='cars.car')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Просмотр автомобиля',
                'verbose_name_plural': 'Просмотры автомобилей',
            },
        ),
        migrations.CreateModel(
            name='CarFeatureRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_features', to='cars.car')),
                ('feature', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.carfeature')),
            ],
            options={
                'verbose_name': 'Опция автомобиля',
                'verbose_name_plural': 'Опции автомобилей',
                'unique_together': {('car', 'feature')},
            },
        ),
    ]
